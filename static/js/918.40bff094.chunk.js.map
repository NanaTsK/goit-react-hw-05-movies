{"version":3,"file":"static/js/918.40bff094.chunk.js","mappings":"gOAIaA,GAAmBC,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CAC3CC,SAAU,QACVC,SAAU,WACVC,SAAU,SACVC,aAAc,MAEdC,WAAW,aAADC,OARO,sCAUjB,mBAAoB,CAClBC,UAAW,cACXC,UAAW,wCAIFC,GAAYT,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACrCU,QAAS,aAGEC,GAAaX,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CACrCY,SAAU,OACVC,WAAY,MACZC,MAAO,S,SCIT,EAzBmB,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACdC,GAAWC,EAAAA,EAAAA,MAOjB,IACAC,EAAyCH,GAAS,CAAC,EAA3CI,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAaC,EAAIJ,EAAJI,KAC1BC,EAAY,GACZC,EAAWH,EAHD,mCAGyBA,EAAcI,EACjDC,EAAaN,GAASE,EAE5B,OACEK,EAAAA,EAAAA,KAAC7B,EAAgB,CAACsB,MAAOA,EAAMQ,UAC7BC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAA1B,OAAac,EAAGa,YAAcC,MAAO,CAAEC,KAAMlB,GAAWY,SAAA,EAC9DD,EAAAA,EAAAA,KAAA,OAAKQ,IAAKX,EAAUY,IAAKhB,EAAOiB,MAAO,OACvCV,EAAAA,EAAAA,KAACnB,EAAS,CAAAoB,UACRD,EAAAA,EAAAA,KAACjB,EAAU,CAAAkB,SAhBnB,SAAsBR,GACpB,OAAIA,EAAMkB,OAASf,EAAkBH,EAC9BA,EAAMmB,MAAM,EAAGhB,GAAa,KACrC,CAaqBiB,CAAad,WAKpC,EC1Bae,GAAmB1C,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CAC3C2C,QAAS,OACTC,SAAU,OACVC,IAAK,YACLC,WAAY,QACZC,eAAgB,iBCMlB,EAVmB,SAAHhC,GAAwB,IAAlBiC,EAAUjC,EAAViC,WACpB,OACEpB,EAAAA,EAAAA,KAACc,EAAgB,CAAAb,SACdmB,EAAWC,KAAI,SAAAjC,GAAK,OACnBY,EAAAA,EAAAA,KAACsB,EAAU,CAAgBlC,MAAOA,GAAjBA,EAAMI,GAAoB,KAInD,C","sources":["components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst transition = '250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\nexport const MoviesItemStyled = styled('li')({\n  maxWidth: '200px',\n  position: 'relative',\n  overflow: 'hidden',\n  borderRadius: '4px',\n\n  transition: `transform ${transition}`,\n\n  '&:hover, &:focus': {\n    transform: 'scale(1.05)',\n    boxShadow: '0px 0px 2px 1px rgba(0, 0, 0, 0.2)',\n  },\n});\n\nexport const TitleWrap = styled('div')({\n  padding: '10px 4px',\n});\n\nexport const MovieTitle = styled('h2')({\n  fontSize: '20px',\n  fontWeight: '500',\n  color: '#fff',\n});\n","import { useLocation, Link } from 'react-router-dom';\nimport defaultImg from 'images/defImg.jpg';\nimport { MoviesItemStyled, TitleWrap, MovieTitle } from './MoviesItem.styled';\n\nconst MoviesItem = ({ movie }) => {\n  const location = useLocation();\n\n  function shortenTitle(title) {\n    if (title.length < maxLength) return title;\n    return title.slice(0, maxLength) + '...';\n  }\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w300/';\n  const { id, title, poster_path, name } = movie || {};\n  const maxLength = 16;\n  const imageSrc = poster_path ? IMG_URL + poster_path : defaultImg;\n  const titleMovie = title || name;\n\n  return (\n    <MoviesItemStyled title={title}>\n      <Link to={`/movies/${id.toString()}`} state={{ from: location }}>\n        <img src={imageSrc} alt={title} width={200} />\n        <TitleWrap>\n          <MovieTitle>{shortenTitle(titleMovie)}</MovieTitle>\n        </TitleWrap>\n      </Link>\n    </MoviesItemStyled>\n  );\n};\nexport default MoviesItem;\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled('ul')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: '40px 60px',\n  alignItems: 'start',\n  justifyContent: 'space-evenly',\n});\n","import MoviesItem from 'components/MoviesItem/MoviesItem';\nimport { MoviesListStyled } from './MoviesList.styled';\n\nconst MoviesList = ({ moviesList }) => {\n  return (\n    <MoviesListStyled>\n      {moviesList.map(movie => (\n        <MoviesItem key={movie.id} movie={movie} />\n      ))}\n    </MoviesListStyled>\n  );\n};\n\nexport default MoviesList;\n"],"names":["MoviesItemStyled","styled","maxWidth","position","overflow","borderRadius","transition","concat","transform","boxShadow","TitleWrap","padding","MovieTitle","fontSize","fontWeight","color","_ref","movie","location","useLocation","_ref2","id","title","poster_path","name","maxLength","imageSrc","defaultImg","titleMovie","_jsx","children","_jsxs","Link","to","toString","state","from","src","alt","width","length","slice","shortenTitle","MoviesListStyled","display","flexWrap","gap","alignItems","justifyContent","moviesList","map","MoviesItem"],"sourceRoot":""}